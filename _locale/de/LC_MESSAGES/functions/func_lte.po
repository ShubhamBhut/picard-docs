# SOME DESCRIPTIVE TITLE.
# Copyright (C) This documentation is licensed under CC0 1.0.
# This file is distributed under the same license as the MusicBrainz Picard
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: MusicBrainz Picard v2.6.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-03 15:29-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Automatically generated\n"
"Language: de\n"
"Language-Team: none\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../functions/func_lte.rst:6
msgid "$lte"
msgstr ""

#: ../../functions/func_lte.rst:8
msgid "Usage: **$lte(x,y[,type])**"
msgstr ""

#: ../../functions/func_lte.rst:9
msgid "Category: conditional"
msgstr ""

#: ../../functions/func_lte.rst:11
msgid "**Description:**"
msgstr ""

#: ../../functions/func_lte.rst:13
msgid ""
"Returns \"1\" (True) if ``x`` is less than or equal to ``y`` using the "
"comparison specified in ``type``. Possible values of ``type`` are \"int\""
" (integer), \"float\" (floating point), \"text\" (case-sensitive text), "
"\"nocase\" (case-insensitive text) and \"auto\" (automatically determine "
"the type of arguments provided), with \"auto\" used as the default "
"comparison method if ``type`` is not specified.  The \"auto\" type will "
"use the first type that applies to both arguments in the following order "
"of preference: \"int\", \"float\" and \"text\"."
msgstr ""

#: ../../functions/func_lte.rst:22
msgid ""
"The ``type`` argument was added in Picard v2.9.  Prior to that, if an "
"argument was missing or was not an integer, the function would return an "
"empty string."
msgstr ""

#: ../../functions/func_lte.rst:26
msgid "**Example:**"
msgstr ""

#: ../../functions/func_lte.rst:28
msgid "The following statements will return the values indicated:"
msgstr ""

#~ msgid "Usage: **$lte(x,y)**"
#~ msgstr ""

#~ msgid ""
#~ "Returns true if ``x`` is less than"
#~ " or equal to ``y``.  If an "
#~ "argument is missing or is not an"
#~ " integer, the function will return an"
#~ " empty string."
#~ msgstr ""

