name: Check and Build Files

on:
  # Trigger the workflow on push or pull request,
  # but only for the master and development branches
  push:
    branches-ignore:
      - 'gh-pages'
      - 'master'
    paths:
      - 'source/**.rst'
      - 'source/**.txt'
      - '.github/workflows/test.yml'
      - 'setup.py'
  pull_request:
    branches-ignore:
      - 'gh-pages'
      - 'master'
    paths:
      - 'source/**.rst'
      - 'source/**.txt'
      - '.github/workflows/test.yml'
      - 'setup.py'

jobs:
  lint_rst:
    name: Check with LintRST
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test RST Files
      run: python ./setup.py test rst

  build_files:
    name: Build output files
    needs: lint_rst
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        export SPHINXBUILD=`which sphinx-build`
        mkdir _build
        mkdir docs
    - name: Build HTML Files
      run: |
        python ./setup.py build html
    - name: Install LaTex dependencies
      run: |
        sudo apt-get install latexmk
        sudo apt-get install xzdec
        sudo apt-get install texlive
        sudo apt-get install texlive-latex-extra
    - name: Build PDF Files
      run: |
        python ./setup.py build pdf
    - name: Build EPUB Files
      run: |
        python ./setup.py build epub

  #   - name: Update gh-pages branch
  #     run: |
  #       git checkout gh-pages
  #       cd docs
  #       cp -v -f -r * ..
  #       cd ..
  #       git add -A
  #       if grep -q "Changes to be committed:" <<< `git status`; then
  #         git status && git commit -m "Based on '$GITHUB_EVENT_NAME' to '$GITHUB_REF' by '$GITHUB_ACTOR'" && git push origin gh-pages
  #       fi
