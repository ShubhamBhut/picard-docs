# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, MetaBrainz Foundation
# This file is distributed under the same license as the MusicBrainz Picard
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MusicBrainz Picard \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-27 22:50+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/scripting.rst:11
msgid "Scripting"
msgstr ""

#: ../../source/scripting.rst:14
msgid "Syntax"
msgstr ""

#: ../../source/scripting.rst:16
msgid ""
"The syntax is derived from Foobar2000's titleformat. There are three base"
" elements: text, variable and function. Variables consist of alphanumeric"
" characters enclosed in percent signs (e.g. ``%artist%``). Functions "
"start with a dollar sign and end with an argument list enclosed in "
"parentheses (e.g. ``$lower(...)``)."
msgstr ""

#: ../../source/scripting.rst:21
msgid ""
"To use parentheses or commas as-is inside a function call, you must "
"escape them with a backslash."
msgstr ""

#: ../../source/scripting.rst:25
msgid "Metadata Variables"
msgstr ""

#: ../../source/scripting.rst:27
msgid ""
"See :doc:`variables/variables` for the list of standard variables "
"provided by Picard."
msgstr ""

#: ../../source/scripting.rst:29
msgid ""
"Picard's standard variables can be either simple variables containing a "
"single text string, or multi-value variables containing multiple text "
"strings. In scripts, multi-value variables are automatically converted to"
" a single text string by joining the values with a semicolon \";\", "
"except when used with special multi-value functions."
msgstr ""

#: ../../source/scripting.rst:35
msgid "Scripting Functions"
msgstr ""

#: ../../source/scripting.rst:37
msgid ""
"The full list of available scripting functions is available, either "
":doc:`sorted alphabetically <functions/_list_by_name>` or :doc:`grouped "
"by function type <functions/_list_by_type>`."
msgstr ""

